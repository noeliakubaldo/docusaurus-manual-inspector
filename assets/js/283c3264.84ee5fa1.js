"use strict";(self.webpackChunkmanual_inspector=self.webpackChunkmanual_inspector||[]).push([[8686],{7413:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"comandos-avanzados","title":"Comandos Avanzados en la Consola","description":"Adem\xe1s de los comandos b\xe1sicos que vimos anteriormente, existen varios comandos avanzados en la consola que te permiten realizar tareas m\xe1s complejas, como manipular objetos, controlar el flujo de ejecuci\xf3n o inspeccionar el estado de la aplicaci\xf3n en tiempo real.","source":"@site/docs/comandos-avanzados.md","sourceDirName":".","slug":"/comandos-avanzados","permalink":"/docusaurus-manual-inspector/docs/comandos-avanzados","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/comandos-avanzados.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Comandos B\xe1sicos","permalink":"/docusaurus-manual-inspector/docs/comandos-basicos"},"next":{"title":"Solicitudes HTTP","permalink":"/docusaurus-manual-inspector/docs/solicitudes-http"}}');var a=n(4848),c=n(8453);const r={},i="Comandos Avanzados en la Consola",l={},d=[{value:"1. <strong><code>console.group()</code> y <code>console.groupEnd()</code></strong> - Agrupar mensajes",id:"1-consolegroup-y-consolegroupend---agrupar-mensajes",level:2},{value:"2. <strong><code>console.count()</code></strong> - Contar cu\xe1ntas veces se ha ejecutado un bloque de c\xf3digo",id:"2-consolecount---contar-cu\xe1ntas-veces-se-ha-ejecutado-un-bloque-de-c\xf3digo",level:2},{value:"3. <strong><code>console.assert()</code></strong> - Realizar una comprobaci\xf3n de una condici\xf3n",id:"3-consoleassert---realizar-una-comprobaci\xf3n-de-una-condici\xf3n",level:2},{value:"4. <strong><code>console.dir()</code></strong> - Inspeccionar objetos",id:"4-consoledir---inspeccionar-objetos",level:2},{value:"5. <strong><code>console.trace()</code></strong> - Mostrar el rastro de ejecuci\xf3n",id:"5-consoletrace---mostrar-el-rastro-de-ejecuci\xf3n",level:2},{value:"6. <strong><code>console.memory</code></strong> - Inspeccionar el uso de memoria",id:"6-consolememory---inspeccionar-el-uso-de-memoria",level:2},{value:"7. <strong><code>console.timeStamp()</code></strong> - Crear un marcador de tiempo",id:"7-consoletimestamp---crear-un-marcador-de-tiempo",level:2},{value:"Conclusi\xf3n",id:"conclusi\xf3n",level:2}];function t(e){const o={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(o.header,{children:(0,a.jsx)(o.h1,{id:"comandos-avanzados-en-la-consola",children:"Comandos Avanzados en la Consola"})}),"\n",(0,a.jsx)(o.p,{children:"Adem\xe1s de los comandos b\xe1sicos que vimos anteriormente, existen varios comandos avanzados en la consola que te permiten realizar tareas m\xe1s complejas, como manipular objetos, controlar el flujo de ejecuci\xf3n o inspeccionar el estado de la aplicaci\xf3n en tiempo real."}),"\n",(0,a.jsxs)(o.h2,{id:"1-consolegroup-y-consolegroupend---agrupar-mensajes",children:["1. ",(0,a.jsxs)(o.strong,{children:[(0,a.jsx)(o.code,{children:"console.group()"})," y ",(0,a.jsx)(o.code,{children:"console.groupEnd()"})]})," - Agrupar mensajes"]}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.code,{children:"console.group()"})," te permite agrupar mensajes de la consola en un solo bloque expandible. Esto es \xfatil cuando tienes muchas salidas y deseas organizar la informaci\xf3n para facilitar su lectura."]}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.strong,{children:"Ejemplo:"})}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-javascript",children:'console.group("Datos de usuario");\nconsole.log("Nombre: Juan");\nconsole.log("Edad: 30");\nconsole.groupEnd();\n'})}),"\n",(0,a.jsx)(o.p,{children:"Este comando genera un bloque que puedes expandir o contraer en la consola."}),"\n",(0,a.jsxs)(o.h2,{id:"2-consolecount---contar-cu\xe1ntas-veces-se-ha-ejecutado-un-bloque-de-c\xf3digo",children:["2. ",(0,a.jsx)(o.strong,{children:(0,a.jsx)(o.code,{children:"console.count()"})})," - Contar cu\xe1ntas veces se ha ejecutado un bloque de c\xf3digo"]}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.code,{children:"console.count()"})," es \xfatil para contar cu\xe1ntas veces se ha ejecutado una porci\xf3n de c\xf3digo. Imprime un contador que se incrementa cada vez que se llama."]}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.strong,{children:"Ejemplo:"})}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-javascript",children:'for (let i = 0; i < 5; i++) {\n  console.count("Iteraci\xf3n");  // Imprime Iteraci\xf3n: 1, Iteraci\xf3n: 2, etc.\n}\n'})}),"\n",(0,a.jsxs)(o.h2,{id:"3-consoleassert---realizar-una-comprobaci\xf3n-de-una-condici\xf3n",children:["3. ",(0,a.jsx)(o.strong,{children:(0,a.jsx)(o.code,{children:"console.assert()"})})," - Realizar una comprobaci\xf3n de una condici\xf3n"]}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.code,{children:"console.assert()"})," permite hacer una comprobaci\xf3n. Si la condici\xf3n es falsa, se imprime un mensaje en la consola. Si la condici\xf3n es verdadera, no pasa nada."]}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.strong,{children:"Ejemplo:"})}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-javascript",children:'let edad = 18;\nconsole.assert(edad >= 18, "La edad no es v\xe1lida");  // Si la condici\xf3n es falsa, muestra el mensaje\n'})}),"\n",(0,a.jsxs)(o.h2,{id:"4-consoledir---inspeccionar-objetos",children:["4. ",(0,a.jsx)(o.strong,{children:(0,a.jsx)(o.code,{children:"console.dir()"})})," - Inspeccionar objetos"]}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.code,{children:"console.dir()"})," te permite inspeccionar un objeto o un elemento en detalle, mostrando sus propiedades y m\xe9todos de forma interactiva. Es muy \xfatil cuando trabajas con objetos complejos o DOM."]}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.strong,{children:"Ejemplo:"})}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-javascript",children:'let usuario = {\n  nombre: "Carlos",\n  edad: 28,\n  mostrarInfo: function() { return `${this.nombre}, ${this.edad} a\xf1os`; }\n};\nconsole.dir(usuario);\n'})}),"\n",(0,a.jsxs)(o.h2,{id:"5-consoletrace---mostrar-el-rastro-de-ejecuci\xf3n",children:["5. ",(0,a.jsx)(o.strong,{children:(0,a.jsx)(o.code,{children:"console.trace()"})})," - Mostrar el rastro de ejecuci\xf3n"]}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.code,{children:"console.trace()"})," te permite ver la ",(0,a.jsx)(o.strong,{children:"pila de llamadas"})," en el punto donde se invoca, lo que es muy \xfatil para detectar problemas en el flujo de ejecuci\xf3n."]}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.strong,{children:"Ejemplo:"})}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-javascript",children:'function a() { b(); }\nfunction b() { c(); }\nfunction c() { console.trace("Rastro de ejecuci\xf3n"); }\na();  // Imprime el rastro de ejecuci\xf3n\n'})}),"\n",(0,a.jsxs)(o.h2,{id:"6-consolememory---inspeccionar-el-uso-de-memoria",children:["6. ",(0,a.jsx)(o.strong,{children:(0,a.jsx)(o.code,{children:"console.memory"})})," - Inspeccionar el uso de memoria"]}),"\n",(0,a.jsxs)(o.p,{children:["El objeto ",(0,a.jsx)(o.code,{children:"console.memory"})," te permite inspeccionar el uso de memoria del navegador. Es \xfatil para hacer auditor\xeda de rendimiento y detectar fugas de memoria."]}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.strong,{children:"Ejemplo:"})}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-javascript",children:"console.log(console.memory);  // Muestra informaci\xf3n sobre el uso de memoria\n"})}),"\n",(0,a.jsxs)(o.h2,{id:"7-consoletimestamp---crear-un-marcador-de-tiempo",children:["7. ",(0,a.jsx)(o.strong,{children:(0,a.jsx)(o.code,{children:"console.timeStamp()"})})," - Crear un marcador de tiempo"]}),"\n",(0,a.jsxs)(o.p,{children:["El comando ",(0,a.jsx)(o.code,{children:"console.timeStamp()"})," crea un marcador de tiempo en el registro de la consola. Esto puede ser \xfatil para realizar un seguimiento del rendimiento o para marcar puntos espec\xedficos en la ejecuci\xf3n del c\xf3digo."]}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.strong,{children:"Ejemplo:"})}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-javascript",children:'console.timeStamp("Inicio proceso");\n// C\xf3digo\nconsole.timeStamp("Fin proceso");\n// La consola mostrar\xe1 un marcador en esos puntos\n'})}),"\n",(0,a.jsx)(o.h2,{id:"conclusi\xf3n",children:"Conclusi\xf3n"}),"\n",(0,a.jsx)(o.p,{children:"Estos comandos avanzados ofrecen un control mucho mayor sobre c\xf3mo interact\xfaas con la consola, lo que facilita tareas complejas como depuraci\xf3n avanzada, an\xe1lisis de rendimiento y monitoreo del flujo de ejecuci\xf3n. Usarlos adecuadamente te permitir\xe1 realizar pruebas m\xe1s detalladas y mejorar la calidad de tu c\xf3digo."})]})}function u(e={}){const{wrapper:o}={...(0,c.R)(),...e.components};return o?(0,a.jsx)(o,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>r,x:()=>i});var s=n(6540);const a={},c=s.createContext(a);function r(e){const o=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(c.Provider,{value:o},e.children)}}}]);